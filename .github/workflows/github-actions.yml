name: Delivery Service CI/CD

on:
  push:
    branches:
      - main
  repository_dispatch:
    types: [trigger-workflow]

jobs:
  build-and-deploy-code:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout DeliveryService Repo repository
      uses: actions/checkout@v2
      with:
        repository: congpham234/DeliveryService
        ref: main

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Build Code
      run: npm run build

    - name: Build Docker Image
      run: docker build --platform linux/amd64 -t delivery-service:latest .

    - name: Login to AWS ECR Docker
      run: aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 730335480908.dkr.ecr.us-west-2.amazonaws.com/delivery-service-ecr-repo
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-west-2

    - name: Tag Docker Image with Latest
      run: docker tag delivery-service:latest 730335480908.dkr.ecr.us-west-2.amazonaws.com/delivery-service-ecr-repo:latest

    - name: Push Docker Image to ECR
      run: docker push 730335480908.dkr.ecr.us-west-2.amazonaws.com/delivery-service-ecr-repo:latest

  build-and-deploy-cdk:
    runs-on: ubuntu-latest
    needs: build-and-deploy-code

    steps:
    - name: Checkout DeliveryServiceCDK Repo repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Build
      run: npm run build

    - name: Install AWS CDK CLI
      run: npm install -g aws-cdk

    - name: Deploy CDK stack
      run: cdk synth && cdk deploy --require-approval never "*"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-west-2

  send-discord-notification:
    runs-on: ubuntu-latest
    needs: [build-and-deploy-code, build-and-deploy-cdk]
    if: always()
    steps:
      - name: Send Discord notification
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          title: "Deploy Delivery Service AWS Infrastructure"
          description: "Build and deploy AWS Infrastructure for Delivery Service CDK"
          image: ${{ secrets.EMBED_IMAGE }}
          color: 0x6AA84F
          url: "https://github.com/congpham234/DeliveryServiceCDK"
          username: Kilala
          avatar_url: ${{ secrets.EMBED_IMAGE }}
